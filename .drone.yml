#kind: pipeline
#name: test 
#
#steps:
#- name: npm test 
#  image: node 
#  environment:
#    DBATLAS_USER: 
#      from_secret: dbatlas-user  
#    DBATLAS_PW:
#      from_secret: dbatlas-pw 
#  commands:
#    - echo 'hello world'
#    - echo $DBATLAS_USER
#    - npm install
#    - npm test
#- name: slack
#  image: plugins/slack
#  settings:
#    webhook: https://hooks.slack.com/services/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
#    channel: cicd
#    template: > 
#      {{#success build.status}} 
#        *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}: Build #{{ build.number }}* (type: `{{ build.event }}`)
#      {{else}}
#        *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}: Build #{{ build.number }}* (type: `{{ build.event }}`)
#      <{{ build.link }}|Visit build page ↗>
#      {{/success}}
#      Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>
#
#      Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>
# 
#      Author: {{ build.author }}
#  when:
#    status: 
#      - success
#      - failure 
#
#---
kind: pipeline
type: ssh
name: default

server:
  host: 35.247.140.17 
  user: sudo-admin 
  ssh_key:
    from_secret: zoa-admin-ssh

steps:
  - name: authorize google
    environment:
      GCLOUD_CREDENTIALS_BASE64:
        from_secret: gcloud-credentials-base64
    commands:
      - echo $GCLOUD_CREDENTIALS_BASE64 >> .creds.base64.json
      - cat .creds.base64.json
      - base64 --decode .creds.base64.json > .creds.json 
      - sudo gcloud auth activate-service-account zoa-service-acct@zoa001.iam.gserviceaccount.com --key-file=.creds.json
      - cat .creds.json | sudo docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/web
      - cat .creds.json | sudo docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/fileserver
      - cat .creds.json | sudo docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/jwt
      - cat .creds.json | sudo docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/caddy-server
      - cat .creds.json | sudo docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/graphql-server
  - name: cloudbuild microservice-fileupload-download
    commands:
      - sudo gcloud builds submit
  - name: docker compose (deploy)
    commands:
      - cp /home/sudo-admin/docker-compose.yml .
      - sudo docker-compose pull fileserver 
      - sudo docker-compose up -d --build
  - name: slack
    commands:
      - cp /home/sudo-admin/slack/message.sh .
      - sh message.sh
    when:
      status:
        - success
        - failure

trigger:
  branch: 
    - master

---
kind: secret
name: gcloud-credentials-base64 
data: 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

---
kind: secret
name: dbatlas-user 
data: OH7K8zbcVFS6kuBWe/GwvwH3oyVorZYlJxfMHnTwTDq0Xo/xrfyf

---
kind: secret
name: dbatlas-pw 
data: +bIGq0VNTQcCdXoafmWs/rrez3GnWlybw87QKD6/k/QUj0gYYcI=

#---
#kind: pipeline
#type: ssh
#name: default
#
#server: 
#    host: 165.22.104.56 
#    user: root
#    ssh_key: 
#        from_secret: key002
#
#steps: 
#- name: authorize google
#  commands:
#    - gcloud auth activate-service-account zoa-service-acct@zoa001.iam.gserviceaccount.com --key-file=/root/secrets/.creds.json
#    - cat /root/secrets/.creds.json | docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/web
#    - cat /root/secrets/.creds.json | docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/fileserver
#    - cat /root/secrets/.creds.json | docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/jwt
#    - cat /root/secrets/.creds.json | docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/caddy-server
#    - cat /root/secrets/.creds.json | docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/graphql-server
#- name: cloudbuild microservice-fileupload-download 
#  commands:
#    - gcloud builds submit
#- name: docker compose (deploy) 
#  commands:
#    - cp /root/docker-compose.yml .
#    - docker-compose pull fileserver
#    - docker-compose up -d --force-recreate
#- name: slack
#  commands: 
#    - cp /root/slack/message.sh .
#    - sh message.sh 
#  when: 
#    status: 
#      - success
#      - failure
