kind: pipeline
name: test 

steps:
- name: end notify slack 
  image: plugins/slack
  settings:
    webhook: https://hooks.slack.com/services/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
    channel: cicd
- name: npm test (can't decrypt without full gcloud installation)
  image: node 
  environment:
    DBATLAS_USER: 
      from_secret: DBATLAS_USER
    DBATLAS_PW:
      from_secret: DBATLAS_PW 
  commands:
    - npm install
    - npm test
- name: slack
  image: plugins/slack
  settings:
    webhook: https://hooks.slack.com/services/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
    channel: cicd
    template: > 
      {{#success build.status}} 
        *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}*: <https://github.com/{{ repo.owner }}/{{ repo.name }}/pull/{{ build.pull }}|Pull Request #{{ build.pull }}>
      {{else}}
        *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}: Build #{{ build.number }}* (type: `{{ build.event }}`)
      <{{ build.link }}|Visit build page ↗>
      {{/success}}
      Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>
      Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>
      Author: {{ build.author }}
  when:
    status: [ success, failure ]

---
kind: pipeline
type: ssh
name: default

server: 
    host: 165.22.104.56 
    user: root
    ssh_key: 
        from_secret: key002

steps: 
- name: auth server
  commands:
    - gcloud config set project zoa001 
    - gcloud auth activate-service-account zoa-service-acct@zoa001.iam.gserviceaccount.com --key-file=/root/secrets/.creds.json
- name: decrypt 
  commands:
    - gcloud kms decrypt --plaintext-file="keys.json" --ciphertext-file="keys.json.enc" --location=global --keyring="projects/zoa001/locations/global/keyRings/keyring-zoa001" --key="projects/zoa001/locations/global/keyRings/keyring-zoa001/cryptoKeys/mongo-key"
- name: cloudbuild microservice-fileupload-download 
  commands:
    - gcloud builds submit
- name: docker compose (deploy) 
  commands:
    - cp /root/docker-compose.yml .
    - docker-compose up -d --force-recreate
depends_on:
- test 

